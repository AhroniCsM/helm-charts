---
# replicas -- amount of desired pod(s) replica(s)
replicas: 1

image:
  # image.repository -- image repository
  repository: mvisonneau/slack-git-compare

  # image.tag -- image tag
  # tag: <default to chart version>

  # image.repository -- image pullPolicy
  pullPolicy: IfNotPresent

# labels -- additional labels for the deployment resource
labels: {}

# annotations -- additional annotations for the deployment resource
annotations: {}

# podLabels -- additional labels for the pods
podLabels: {}

# podAnnotations -- additional annotations for the pods
podAnnotations: {}

service:
  # type -- service type
  type: ClusterIP

  # port -- service port
  port: 80

  # labels -- additional labels for the service
  labels: {}

  # annotations -- additional annotations for the service
  annotations: {}

# resources -- resources to allocate to the pods
resources: {}
#  limits:
#    cpu: 50m
#    memory: 64Mi
#  requests:
#    cpu: 50m
#    memory: 64Mi

strategy:
  # strategy -- deployment strategy type
  type: RollingUpdate

## Liveness and Readiness probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /health/live
    port: 8080

readinessProbe:
  httpGet:
    path: /health/ready
    port: 8080
  initialDelaySeconds: 5
  timeoutSeconds: 5
  failureThreshold: 3
  periodSeconds: 30

# nodeSelector -- node selector for pod assignment
## ref: https://kubernetes.io/docs/user-guide/node-selection/
nodeSelector: {}

# tolerations -- tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

# affinity -- affinity for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

# securityContext -- security context to apply to the pods
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context
securityContext:
  # runAsUser: 65534  # run as nobody user

# args -- arguments for the exporter binary
args: []

# envVariables -- environment variables for the container
envVariables:
  - name: SGC_CONFIG
    value: /etc/config.yml

## Ingress configuration (useful when looking to expose /webhook endpoint externally)
ingress:
  # ingress.enabled -- deploy a ingress to access the exporter pod(s) /webhook endpoint
  enabled: false

  # ingress.annotations -- additional annotations for the ingress resource
  annotations:
    # kubernetes.io/ingress.class: nginx
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"

  # ingress.path -- path to point the root of the ingress
  path: /

  # ingress.pathType -- pathType of the ingress
  pathType: Prefix

  # ingress.service.port.name -- service port name for the ingress
  service:
    port:
      name: http

  # ingress.hosts -- ingress hosts
  hosts:
    - sgc.example.com

  # ingress.tls -- ingress tls hosts config
  tls:
    - hosts:
        - sgc.example.com

# rbac -- If your kubernetes cluster defined the pod security policy, then you need to enable this part, and define clusterRole based on your situation.
rbac:
  enabled: false
  clusterRole: ""
  # serviceAccount -- default name of serviceAccount is "default" if you don't define the name by yourself
  serviceAccount:
    name: ""

# config -- configuration variables of the app
config:
  cache: {}
  # providers:
  #   update_repositories:
  #     every_seconds: 3600
  #     on_start: true
  #   update_repositories_refs:
  #     every_seconds: 0
  #     on_start: false
  # slack:
  #   update_users_emails:
  #     every_seconds: 86400
  #     on_start: true

  providers: []
  # - type: github
  #   url: 'https://api.github.com/'
  #   token: ''
  #   owners: [foo,bar]
  # - type: gitlab
  #   url: 'https://gitlab.com'
  #   token: ''
  #   owners: [foo,bar]

  slack:
    token: ""
    signing-secret: ""

  log:
    format: json
    level: info

  users: []
  # - email: foo@bar.baz
  #   aliases:
  #     - baz@bar.foo
